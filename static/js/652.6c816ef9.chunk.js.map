{"version":3,"file":"static/js/652.6c816ef9.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.jsx","services/api.js","services/getImage.js"],"sourcesContent":["import { Suspense, useEffect, useRef, useState } from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { getMovieDetails } from 'services/api';\nimport { getPoster } from 'services/getImage';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState({});\n\n  const [loading, setLoading] = useState(false);\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchMovieDetails = async id => {\n      try {\n        setLoading(true);\n        const movieDetailsData = await getMovieDetails(id);\n        setMovieDetails(movieDetailsData);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovieDetails(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && (\n        <ThreeDots\n          height=\"80\"\n          width=\"80\"\n          radius=\"9\"\n          color=\"#3f51b5\"\n          ariaLabel=\"three-dots-loading\"\n          wrapperStyle={{}}\n          wrapperClassName=\"\"\n          visible={true}\n        />\n      )}\n      <Link to={backLinkLocationRef.current}>GO Back</Link>\n      {movieDetails && (\n        <div>\n          <img\n            className=\"movie-poster\"\n            src={getPoster(movieDetails.poster_path)}\n            alt={movieDetails.title || movieDetails.name}\n          />\n          <div>\n            <h1>{movieDetails.title || movieDetails.name}</h1>\n            <p>Rating: {movieDetails.vote_average}</p>\n            <h2>Overview</h2>\n            <p>{movieDetails.overview}</p>\n            <h2>Genres</h2>\n            <p>\n              {movieDetails?.genres?.length > 0 && movieDetails?.genres\n                ? movieDetails.genres.map(genre => genre.name).join(', ')\n                : 'NO Genres'}\n            </p>\n          </div>\n        </div>\n      )}\n\n      <ul>\n        <li>\n          <NavLink to=\"cast\">Customers</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"reviews\">Review</NavLink>\n        </li>\n      </ul>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\nconst URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6da8758eb40e221013709d63079fd9c4';\n\nconst getTrandingMovies = async () => {\n  const response = await axios.get(`${URL}trending/all/day?api_key=${API_KEY}`);\n\n  return response.data.results;\n};\n\nconst getMovies = async query => {\n  const response = await axios.get(\n    `${URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n\n  return response.data.results;\n};\n\nconst getMovieDetails = async movieId => {\n  const response = await axios.get(`${URL}movie/${movieId}?api_key=${API_KEY}`);\n\n  return response.data;\n};\n\nconst getCastDetails = async movieId => {\n  const response = await axios.get(\n    `${URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n\n  return response.data.cast;\n};\n\nconst getReview = async movieId => {\n  const response = await axios.get(\n    `${URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n\n  console.log('review', response.data.results);\n  return response.data.results;\n};\n\nexport {\n  getTrandingMovies,\n  getMovies,\n  getMovieDetails,\n  getCastDetails,\n  getReview,\n};\n","import noPoster from '../images/No_image_poster.png';\nexport function getPoster(poster) {\n  if (poster) {\n    return `https://image.tmdb.org/t/p/w300${poster}`;\n  } else {\n    return noPoster;\n  }\n}\n"],"names":["useState","movieDetails","setMovieDetails","loading","setLoading","location","useLocation","backLinkLocationRef","useRef","state","from","movieId","useParams","useEffect","fetchMovieDetails","id","getMovieDetails","movieDetailsData","console","log","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","to","current","className","src","getPoster","poster_path","alt","title","name","vote_average","overview","genres","length","map","genre","join","Suspense","URL","API_KEY","getTrandingMovies","axios","response","data","results","getMovies","query","getCastDetails","cast","getReview","poster","noPoster"],"sourceRoot":""}