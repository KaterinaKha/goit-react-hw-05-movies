{"version":3,"file":"static/js/573.0955761c.chunk.js","mappings":"4MAIaA,EAAY,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,GAAIC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACrCC,GAAWC,EAAAA,EAAAA,MACXC,GAAMC,EAAAA,EAAAA,GAAUJ,GAEtB,OACE,eAAIK,UAAU,aAAd,UACE,UAAC,KAAD,CAAMC,GAAE,kBAAaT,GAAMU,MAAO,CAAEC,KAAMP,GAA1C,WACE,gBAAKI,UAAU,eAAeF,IAAKA,EAAKM,IAAKX,GAASC,IACrDD,GAASC,MAHkBF,EAOnC,ECbYa,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC1B,OACE,wBACGA,EAAOC,KAAI,SAAAC,GACV,OACE,SAACjB,EAAD,CAEEC,GAAIgB,EAAMhB,GACVC,MAAOe,EAAMf,MACbC,KAAMc,EAAMd,KACZC,YAAaa,EAAMb,aAJda,EAAMhB,GAOhB,KAGN,C,mICoDD,UAhEe,WAAO,IAAD,EACnB,GAA4BiB,EAAAA,EAAAA,UAAS,IAArC,eAAOH,EAAP,KAAeI,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMP,EAAK,UAAGM,EAAaE,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACR,GAAKT,EAAL,CACA,IAAMU,EAAW,mCAAG,oGAEhBN,GAAW,GAFK,UAGSO,EAAAA,EAAAA,IAAUX,GAHnB,OAGVY,EAHU,OAIhBV,EAAUU,GAJM,gDAMhBC,QAAQC,IAAR,MANgB,yBAQhBV,GAAW,GARK,4EAAH,qDAYjBM,GAbkB,CAcnB,GAAE,CAACV,IAYJ,OACE,4BACE,kBAAMe,SAZW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTC,EAAcF,EAAKG,SAASC,OAAOC,MAEzChB,EAAgB,CAAEiB,MAAOJ,IAEzBF,EAAKO,OACN,EAIG,WACE,kBACEvC,KAAK,SACLwC,KAAK,OACLC,UAAQ,EACRC,YAAY,sBAEd,oBAAQF,KAAK,SAAb,WACE,SAAC,MAAD,KACA,0BAAM,iBAGTvB,IACC,SAAC,KAAD,CACE0B,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,KAGb,SAAC,IAAD,CAAWtC,OAAQA,MAGxB,C,+LCrEKuC,EAAM,gCACNC,EAAU,mCAEVC,EAAiB,mCAAG,oGACDC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,oCAA4CC,IAD3C,cAClBG,EADkB,yBAGjBA,EAASC,KAAKC,SAHG,2CAAH,qDAMjBhC,EAAS,mCAAG,WAAMa,GAAN,uFACOgB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACSC,EADT,kBAC0Bd,IAFjC,cACViB,EADU,yBAKTA,EAASC,KAAKC,SALL,2CAAH,sDAQTC,EAAe,mCAAG,WAAMC,GAAN,uFACCL,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAAyBQ,EAAzB,oBAA4CP,IAD7C,cAChBG,EADgB,yBAGfA,EAASC,MAHM,2CAAH,sDAMfI,EAAc,mCAAG,WAAMD,GAAN,uFACEL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACNQ,EADM,4BACqBP,IAFvB,cACfG,EADe,yBAKdA,EAASC,KAAKK,MALA,2CAAH,sDAQdC,EAAS,mCAAG,WAAMH,GAAN,uFACOL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACNQ,EADM,4BACqBP,IAF5B,cACVG,EADU,OAKhB5B,QAAQC,IAAI,SAAU2B,EAASC,KAAKC,SALpB,kBAMTF,EAASC,KAAKC,SANL,2CAAH,qD,uHC/BR,SAASpD,EAAU0D,GACxB,OAAIA,EACI,kCAAN,OAAyCA,GAElCC,CAEV,C","sources":["components/MovieList/MovieItem.jsx","components/MovieList/MovieList.jsx","pages/Movies/Movies.jsx","services/api.js","services/getImage.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getPoster } from 'services/getImage';\n\nexport const MovieItem = ({ id, title, name, poster_path }) => {\n  const location = useLocation();\n  const src = getPoster(poster_path);\n\n  return (\n    <li className=\"movie-item\" key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <img className=\"movie-poster\" src={src} alt={title || name} />\n        {title || name}\n      </Link>\n    </li>\n  );\n};\n\nMovieItem.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string,\n  name: PropTypes.string,\n  poster_path: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport { MovieItem } from './MovieItem';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <ul>\n      {movies.map(movie => {\n        return (\n          <MovieItem\n            key={movie.id}\n            id={movie.id}\n            title={movie.title}\n            name={movie.name}\n            poster_path={movie.poster_path}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.array,\n};\n","import { MovieList } from 'components/MovieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { useSearchParams } from 'react-router-dom';\nimport { BiSearchAlt } from 'react-icons/bi';\nimport { getMovies } from 'services/api';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movie = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!movie) return;\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        const moviesList = await getMovies(movie);\n        setMovies(moviesList);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [movie]);\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const searchValue = form.elements.search.value;\n\n    setSearchParams({ query: searchValue });\n    // e.target.elements.search.value = '';\n    form.reset();\n  };\n\n  return (\n    <div>\n      <form onSubmit={onFormSubmit}>\n        <input\n          name=\"search\"\n          type=\"text\"\n          required\n          placeholder=\"Search movies...\"\n        />\n        <button type=\"submit\">\n          <BiSearchAlt />\n          <span>Search</span>\n        </button>\n      </form>\n      {loading && (\n        <ThreeDots\n          height=\"80\"\n          width=\"80\"\n          radius=\"9\"\n          color=\"#3f51b5\"\n          ariaLabel=\"three-dots-loading\"\n          wrapperStyle={{}}\n          wrapperClassName=\"\"\n          visible={true}\n        />\n      )}\n      <MovieList movies={movies} />\n    </div>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\nconst URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6da8758eb40e221013709d63079fd9c4';\n\nconst getTrandingMovies = async () => {\n  const response = await axios.get(`${URL}trending/all/day?api_key=${API_KEY}`);\n\n  return response.data.results;\n};\n\nconst getMovies = async query => {\n  const response = await axios.get(\n    `${URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n\n  return response.data.results;\n};\n\nconst getMovieDetails = async movieId => {\n  const response = await axios.get(`${URL}movie/${movieId}?api_key=${API_KEY}`);\n\n  return response.data;\n};\n\nconst getCastDetails = async movieId => {\n  const response = await axios.get(\n    `${URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n\n  return response.data.cast;\n};\n\nconst getReview = async movieId => {\n  const response = await axios.get(\n    `${URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n\n  console.log('review', response.data.results);\n  return response.data.results;\n};\n\nexport {\n  getTrandingMovies,\n  getMovies,\n  getMovieDetails,\n  getCastDetails,\n  getReview,\n};\n","import noPoster from '../images/No_image_poster.png';\nexport function getPoster(poster) {\n  if (poster) {\n    return `https://image.tmdb.org/t/p/w300${poster}`;\n  } else {\n    return noPoster;\n  }\n}\n"],"names":["MovieItem","id","title","name","poster_path","location","useLocation","src","getPoster","className","to","state","from","alt","MovieList","movies","map","movie","useState","setMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchMovies","getMovies","moviesList","console","log","onSubmit","e","preventDefault","form","currentTarget","searchValue","elements","search","value","query","reset","type","required","placeholder","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","URL","API_KEY","getTrandingMovies","axios","response","data","results","getMovieDetails","movieId","getCastDetails","cast","getReview","poster","noPoster"],"sourceRoot":""}